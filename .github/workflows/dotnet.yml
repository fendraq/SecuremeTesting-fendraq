# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: CI/CD Test

on:
  push:
    branches: ["main"]
  
jobs:
  api_tests:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - name: Setup dotnet
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x
      - name: Install Newman
        run: npm install -g newman
      - name: Install dotnet project dependencies
        run: dotnet restore
      - name: Build
        run: dotnet build
      - name: Start Server
        run: cd Secureme/server && nohup dotnet run &
      - name: Run API-tests
        run: newman run SecuremeTests/api-tests/Secureme_API_testing_fendraq.postman_collection.json -e SecuremeTests/api-tests/environment.json
    
  gui_tests:
    runs-on: ubuntu-latest
    needs: api_tests
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_NAME: ${{ secrets.DB_NAME }}
      SMTP_SERVER: ${{ secrets.SMTP_SERVER }}
      SMTP_PORT: ${{ secrets.SMTP_PORT }}
      FROM_EMAIL: ${{ secrets.FROM_EMAIL }}
      EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Test DB connection
        run: |
          echo "Checking DB connection..."
          pg_isready -h $DB_HOST -p $DB_PORT -U $DB_USER
        env:
          PGPASSWORD: ${{ secrets.DB_PASSWORD }}

      # Build server project first
      - name: Restore projects
        run: dotnet restore

      - name: Build projects
        run: dotnet build

      - name: Install Playwright Browsers
        run: cd SecuremeTests && pwsh bin/Debug/net8.0/playwright.ps1 install --with-deps

      - name: Start server
        run: cd Secureme/server && nohup dotnet run &

      - name: Run UI tests
        run: cd SecuremeTests && dotnet test 

